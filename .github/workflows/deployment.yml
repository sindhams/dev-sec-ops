name: "deployment"

on:
  push:
    branches:
      - main
    paths-ignore:
    - 'terraform/**'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  CLUSTER_NAME: demo-eks-cluster
  DEPLOYMENT_NAME: demo-app

jobs:
  kubernetes-deploy:
    name: Deploy Kubernetes manifests to EKS
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${git rev-parse --short HEAD})

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/demo-app:${{steps.vars.outputs.tag}}


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Apply Kubernetes manifests
      working-directory: ./k8s/
      run: |
        aws eks update-kubeconfig --name ${CLUSTER_NAME}
        kubectl apply -f ns.yaml
        kubectl apply -f demoapp-svc.yaml -n demoapp
        kubectl apply -f demoapp-deployment.yaml -n demoapp
        kubectl set image deployment/${DEPLOYMENT_NAME} demoapp=image:${{steps.vars.outputs.tag}} -n demoapp
        kubectl rollout status deployment/${DEPLOYMENT_NAME} -n demoapp
